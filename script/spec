#! /usr/bin/env node

// - Determine specs that need to be
// compiled.
//
// - For each spec
//   - Parse
//   - compile

const fs = require("fs");

const describe =
  /^\/\/ (#+ )(Describe )?(.*)( #+)?$/i;
const it = /^\/\/ (It )?(.*)$/i;

fs.readFile('test/list.spec', 'utf8',
(err, data) => {
  if (err) {
    console.error(err);
    return;
  }

  let lines = data.split("\n");
  let indentLevel = 0;
  let indent = "";
  let inIt = false; // in an it block?

  for (line of lines) {
    let match = line.match(describe);
    if(match) {
      if (inIt) {
        indentLevel--;
        indent = "  ".repeat(indentLevel);
        console.log(indent + "});");
        inIt = false;
      }
      let level = match[1].length - 2;
      while (indentLevel > level) {
        indentLevel--;
        indent = "  ".repeat(indentLevel);
        console.log(indent + "});");
      }
      indent = "  ".repeat(level);
      console.log(`${indent}describe("${match[3]}", () => {`);
      // if(level > indentLevel) {
      // }
      // indent = "  ".repeat(level-1);
      indent = indent + "  ";
      indentLevel++
      // if (indentLevel > 0) {
      //   let q = level - indentLevel;
      //   console.log(q);
      // }
      // if (indentLevel > 0) {
      //   indentLevel--;
      //   indent =
      // if (level < indentLevel)

      // indent = "  ".repeat(level);
      // console.log(line);
      // console.log(match[1], match[3]);
      // indent = match[1].length - 1;
      // indentLevel =
      continue;
    }
    match = line.match(it);
    if (match) {
      if (inIt) {
        indentLevel--;
        indent = "  ".repeat(indentLevel);
        console.log(indent + "});");
      }
      console.log(`${indent}it("${match[2]}", () => {`);
      inIt = true;
      indent = indent + "  ";
      indentLevel++
      continue;
    }

    console.log(indent + line);
  }
  while (indentLevel > 0) {
    indentLevel--;
    indent = "  ".repeat(indentLevel);
    console.log(indent + "});");
  }


});





