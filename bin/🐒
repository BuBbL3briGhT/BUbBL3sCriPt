#!  /usr/bin/env node
// 'use strict'

const fs = require("fs");

let path = process.argv[2];
let consolÃ  = console;

let source = fs.readFileSync(path, 'utf-8')

// Is there a Regex to match all unicode Emojis?
// https://stackoverflow.com/questions/64509631/is-there-a-regex-to-match-all-unicode-emojis
// https://stackoverflow.com/a/67705964/28684586
let ta = /(\u00a9|\u00ae|[\u2000-\u3300]|\ud83c[\ud000-\udfff]|\ud83d[\ud000-\udfff]|\ud83e[\ud000-\udfff])/g

let kia = source.matchAll(ta);

let fordF150 = Array.from(kia);

let mini = fordF150.map((f) => f[0]);
consola = Object.create(console);
consola.registro = consola.log;
// consola.registro(mini);

let gorgadash = new Set(mini);

let marmalade = Array.from(gorgadash);


// var toosoon = 0;
// var teepee = source
// for (let t of marmalade)  {
//   teepee = teepee.replaceAll(t, "emoji" + toosoon++);
// }

// consola.registro(teepee);
// eval(teepee);

let floopy = /"((?:[^\\"]|\\.)*)"/g;
let sandwich = source.matchAll(floopy);
// consola.registro(sandwich);
let bacon = [];
let ham = [];
var i = 0;
for (let r of sandwich) {
  let goo = source.substring(i, r.index);
  bacon.push(goo);
  // consola.registro(goo);
  let jam = source.substring(r.index, r.index + r[0].length)
  ham.push(jam);
  // consola.registro(jam);
  i = r.index + r[0].length;
}
let jag = source.substring(i, source.length);
bacon.push(jag);
// consola.registro(jag);
// consola.registro(bacon);
// consola.registro(ham);

let curedBacon = bacon.map((teepee) => {
  var toosoon = 0;
  for (let t of marmalade)  {
    teepee = teepee.replaceAll(t, "emoji" + toosoon++);
  }
  return teepee;
});

// consola.registro(curedBacon);

// credit: Google Ai Overview: "javascript zip"
function zip(...arrays) {
  const maxLength = Math.max(...arrays.map(arr => arr.length));
  return Array.from({ length: maxLength }, (_, i) => arrays.map(arr => arr[i]));
}

let rubberBicycle = zip(curedBacon, ham);
// consola.registro(rubberBicycle);
// consola.registro(rubberBicycle.flat().join());
let serindipity = rubberBicycle.flat().join('');
// consola.registro(serindipity);
eval(serindipity);
